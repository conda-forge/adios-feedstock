{% set name = "adios" %}
{% set build = 1023 %}
{% set version = "1.13.1" %}
{% set sha256 = "684096cd7e5a7f6b8859601d4daeb1dfaa416dfc2d9d529158a62df6c5bcd7a0" %}

# ensure mpi is defined (needed for conda-smithy recipe-lint)
{% set mpi = mpi or 'nompi' %}

# prioritize nompi variant via build number
{% if mpi == 'nompi' %}
{% set build = build + 100 %}
{% endif %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: http://users.nccs.gov/%7Epnorbert/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}
  patches:
    # Recognize newer python3 interpreters
    - 0001-python3interp.patch
    - 0002-selection_api_nompi_test_FC.patch
    # https://github.com/ornladios/ADIOS/pull/201
    - 0003-numpy.py

build:
  number: {{ build }}

  # add build string so packages can depend on
  # mpi or nompi variants
  # dependencies:
  # `pkg * mpi_mpich_*` for mpich
  # `pkg * mpi_*` for any mpi
  # `pkg * nompi_*` for no mpi

  {% if mpi == 'nompi' %}
  {% set mpi_prefix = "nompi" %}
  {% else %}
  {% set mpi_prefix = "mpi_" + mpi %}
  {% endif %}
  string: "{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}"

  # actually only if one is building shared libraries (we don't), but
  # seams needed for proper downstream MPI selection.
  # strict runtime dependency on build-time MPI flavor
  run_exports:
    - {{ pin_subpackage('adios', min_pin='x.x.x', max_pin='x.x.x') }} {{ mpi_prefix }}_*

  skip: True  # [win]

requirements:
  build:
    - {{ compiler('c') }}
    # FIXME: that MPICXX dependency in ADIOS' configure makes no sense
    - {{ compiler('cxx') }}  # [mpi != 'nompi' and c_compiler != 'toolchain_c']
    - {{ compiler('fortran') }}
    # we only need some python scripts executed during build
    - python >=3
    - make
    - autoconf
    - automake
    - libtool
    - {{ mpi }}  # [mpi == 'openmpi']
    - pkg-config
  host:
    - {{ mpi }}  # [mpi != 'nompi']
    - blosc
    - bzip2
    # need to list hdf5 twice to get version pinning from conda_build_config
    # and build pinning from {{ mpi_prefix }}
#   - hdf5
#   - hdf5 * mpi_{{ mpi }}_*  # [mpi != 'nompi']
    - zlib

test:
  commands:
    # commands and bp tools
    {% set adios_cmds = [
        "adios_config",
        "adios_lint",
        "bpgettime",
        "bpmeta",
        "bpsplit",
        "bpappend",
        "bpdump",
        "bp3ls",
        "bprecover",
        "skeldump"
    ] %}
    # bp2bp bpdiff h52bp bp2h5
    {% for adios_cmd in adios_cmds %}
    - command -v {{ adios_cmd }}  # [unix]
    {% endfor %}

    # inspect linkage of ADIOS

about:
  home: https://www.olcf.ornl.gov/center-projects/adios/
  license: BSD-3-Clause
  license_file: COPYING
  summary: 'The Adaptable IO System (ADIOS) for flexible and fast scientific data processing.'

  # The remaining entries in this section are optional, but recommended
  description: |
    The Adaptable IO System (ADIOS) provides a simple, flexible way
    for scientists to describe the data in their code that may need
    to be written, read, or processed outside of the running
    simulation. By providing an external to the code XML file
    describing the various elements, their types, and how you wish
    to process them this run, the routines in the host code (either
    Fortran or C) can transparently change how they process the
    data.
  doc_url: https://users.nccs.gov/~pnorbert/ADIOS-UsersManual-{{ version }}.pdf
  dev_url: https://github.com/ornladios/ADIOS

extra:
  recipe-maintainers:
    - ax3l
